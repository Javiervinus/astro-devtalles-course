---
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import Title from "@components/shared/Title.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import MainLayout from "@layouts/MainLayout.astro";
import type { GetStaticPaths } from "astro";
import { Icon } from "astro-icon/components";
export const getStaticPaths = (async () => {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await response.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: {
      name,
    },
    props: {
      url,
    },
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;
const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title={`Pokemon - #${id} ${name.charAt(0).toUpperCase() + name.slice(1)}`}
  description={`InformaciÃ³n de ${name}`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex gap-4 items-end">
      <div>
        <button onclick="history.back()" class="text-blue-500">Regresar</button>
        <Title>
          {name}
        </Title>
      </div>

      <button
        id="btn-favorite"
        class="hover:animate-pulse"
        data-name={name}
        data-id={id}
      >
        <Icon data-outline size={50} name="heart-outline" />
        <Icon
          data-fill
          size={50}
          name="heart-fill"
          class="text-red-500 hidden"
        />
      </button>
    </div>
    <PokemonCard name={name} url={url} isBig />
    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
      Your browser does not support the audio element.
    </audio>
    <style>
      a {
        @apply hover:underline text-blue-500;
      }
    </style>
  </section>
</MainLayout>
<script>
  import type { FavoritePokemon } from "@interfaces/favorite-pokemon.interface";

  const handlePageLoad = () => {
    let favoritesPokemon: FavoritePokemon[] = JSON.parse(
      localStorage.getItem("favorites") || "[]"
    );

    const btnFavorite = document.getElementById("btn-favorite");
    if (!btnFavorite) return;
    const name = btnFavorite.dataset.name ?? "";
    const id = btnFavorite.dataset.id ?? "";
    const isFavorite = favoritesPokemon.some((pokemon) => pokemon.id === +id);
    const heartOutline = btnFavorite.querySelector(
      "[data-outline]"
    ) as HTMLElement;
    const heartFill = btnFavorite.querySelector("[data-fill]") as HTMLElement;

    // Check if the current pokemon is in the favorites list
    if (isFavorite) {
      heartOutline.classList.add("hidden");
      heartFill.classList.remove("hidden");
    }

    const toggleFavorite = () => {
      const isFavorite = favoritesPokemon.some((pokemon) => pokemon.id === +id);

      if (isFavorite) {
        favoritesPokemon = favoritesPokemon.filter(
          (pokemon) => pokemon.id !== +id
        );
      } else {
        favoritesPokemon.push({ name, id: +id });
      }

      localStorage.setItem("favorites", JSON.stringify(favoritesPokemon));
    };

    btnFavorite.addEventListener("click", () => {
      heartOutline.classList.toggle("hidden");
      heartFill.classList.toggle("hidden");
      toggleFavorite();
    });
  };

  document.addEventListener("astro:page-load", handlePageLoad);
</script>
