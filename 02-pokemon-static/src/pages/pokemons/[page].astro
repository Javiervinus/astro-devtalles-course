---
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import MainLayout from "@layouts/MainLayout.astro";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const response = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  let data: PokemonListResponse | undefined = undefined;
  if (response.ok) {
    data = await response.json();
  }

  return paginate(data?.results!, { pageSize: 20 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<MainLayout>
  <h1 class="text-3xl">Listado de Pokemons</h1>
  <hr />
  <section
    aria-label="listado de pokemons"
    class="grid grid-cols-1 md:grid-cols-4 lg:grid-cols-5 gap-4 mt-5"
  >
    {
      page.data?.map((pokemon) => (
        <PokemonCard name={pokemon.name} url={pokemon.url} />
      ))
    }
  </section>

  <section class="flex mt-10 gap-2 items-center">
    <!-- {
      page.url.prev && (
        <a class="btn" href={page.url.prev}>
          Anteriores
        </a>
      )
    } -->
    <a
      class:list={[
        "btn",
        {
          disabled: !page.url.prev,
        },
      ]}
      href={page.url.prev}
    >
      Anteriores
    </a>

    <a
      class:list={[
        "btn",
        {
          disabled: !page.url.next,
        },
      ]}
      href={page.url.next}>Siguientes</a
    >
    <div class="flex flex-1"></div>
    <span class="text-xl font-bold">Pagina {page.currentPage}</span>
  </section>
</MainLayout>
<style>
  .btn {
    @apply bg-blue-500 text-white  rounded-md p-2;
  }
  .disabled {
    @apply bg-gray-600 text-gray-400 cursor-not-allowed;
  }
</style>
